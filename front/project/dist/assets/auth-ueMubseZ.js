import{p as t}from"./index-B7BW4uVQ.js";const a={async registerCustomer(r){try{return(await t.post("/api/auth/register",{email:r.email,password:r.password,name:r.username,phone:r.phone,role:"customer"})).data}catch(e){throw console.error("Customer registration failed:",e),e}},async registerRestaurant(r){try{return(await t.post("/api/auth/register",{email:r.email,password:r.password,name:r.username,phone:r.phone,address:r.address,business_license:r.business_license,role:"restaurant"})).data}catch(e){throw console.error("Restaurant registration failed:",e),e}},async login(r){var e;try{const s=await t.post("/api/auth/login",{email:r.email,password:r.password});return console.log("Login response:",s),(e=s.data)!=null&&e.token&&localStorage.setItem("token",s.data.token),s.data}catch(s){throw console.error("Login failed:",s),s}},async getCurrentUser(){var r;try{const e=await t.get("/api/auth/me");if(e.status==="success"&&((r=e.data)!=null&&r.user))return e.data.user;throw new Error("Failed to get user info")}catch(e){throw console.error("Failed to get current user:",e),e}},async updateProfile(r){var e;try{const s=await t.put("/api/auth/profile",r);if(s.status==="success"&&((e=s.data)!=null&&e.user))return s.data;throw new Error("Failed to update profile")}catch(s){throw console.error("Failed to update profile:",s),s}},async updatePassword(r){try{const e=await t.put("/api/auth/password",r);if(e.status==="success")return e.data;throw new Error("Failed to update password")}catch(e){throw console.error("Failed to update password:",e),e}}};export{a};
